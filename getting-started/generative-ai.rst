.. _generative-ai:

=============
Generative AI
=============

Generative AI has evolved rapidly over the past decade and will continue in the future.
Using generative AI and large language models (LLMs) can be helpful tools for contributors.
Their overuse can also be problematic, such as generation of incorrect code, inaccurate documentation, and unneeded code churn.
Discretion, good judgement, and critical thinking **must** be used when opening issues and pull requests.

Acceptable uses
===============

Some of the acceptable uses of generative AI include:

- Assistance with writing comments, especially in a non-native language
- Gaining understanding of existing code
- Supplementing contributor knowledge for code, tests, and documentation

Unacceptable uses
=================

Maintainers may close issues and PRs that are not useful or productive, including
those that are fully generated by AI. If a contributor repeatedly opens unproductive
issues or PRs, they may be blocked.

Anti-patterns
=============
- While AI-assisted tools such as autocompletion can enhance productivity, they sometimes rewrite entire code blocks instead of making small, focused edits.
  This can make it more difficult to review changes and to fully understand both the original intent of the code and the rationale behind the new modifications.
  Maintaining consistency with the original code helps preserve clarity, traceability, and meaningful reviews and also helps us avoid unnecessary code churn.
- Sometimes AI assisted tools make failing unit tests pass by altering or bypassing the tests rather than addressing the underlying problem in the code.
  Such changes do not represent a real fix and should be avoided.
